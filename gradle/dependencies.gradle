repositories {
    mavenCentral()
}
ext {
    qaLibVersion = '1.2.0'
    vaadinVersion = '14.2.0'
    junit4Version = '4.13.1'
    mockitoVersion = '3.3.3'
    assertjVersion = '3.18.1'
    slf4jVersion = '1.7.30'
    commonsLangVersion = '3.9'
    classgraphVersion = '4.8.65'
    joorVersion = '0.9.12'
    guavaVersion = '30.1-jre'
    logbackVersion = '1.2.3'
    apacheIoVersion = '2.8.0'
    openApiVersion = '1.5.2'
    allureVersion = '2.13.8'
    h2Version = '1.4.200'
    joorVersion = '0.9.13'
    jsr303 = '7.0.0.Final'
    postgresqlVersion = '42.2.18'
}
configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}
dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
    }
}
dependencies {
    /* Allure Generator */
    implementation "io.qameta.allure:allure-plugin-api:$allureVersion"
    implementation "io.qameta.allure:allure-generator:$allureVersion"
    /* QA lib */
    implementation("ru.iopump.qa:qa-tools:$qaLibVersion") { transitive false }
    /* Guava */
    implementation "com.google.guava:guava:$guavaVersion"
    /* Open API */
    implementation "org.springdoc:springdoc-openapi-ui:$openApiVersion"
    /* Spring Boot */
    implementation('org.springframework.boot:spring-boot-starter-web') { exclude group: 'ch.qos.logback' }
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation "org.hibernate:hibernate-validator:$jsr303"
    implementation "org.springframework.boot:spring-boot-starter-security"

    implementation "org.jooq:joor:$joorVersion"

    implementation('com.vaadin:vaadin-spring-boot-starter') {
        ["com.vaadin.webjar",
         "org.webjars.bowergithub.insites",
         "org.webjars.bowergithub.polymer",
         "org.webjars.bowergithub.polymerelements",
         "org.webjars.bowergithub.vaadin",
         "org.webjars.bowergithub.webcomponents"].forEach { group -> exclude(group: group) }
    }
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation "commons-io:commons-io:$apacheIoVersion"
    /* Logging API*/
    implementation "org.slf4j:slf4j-api:$slf4jVersion"

    /* Logging IMPL*/
    runtimeOnly "ch.qos.logback:logback-classic:$logbackVersion"
    runtimeOnly "com.h2database:h2:$h2Version"
    runtimeOnly "org.postgresql:postgresql:$postgresqlVersion"
    /* Testing */
    testImplementation("junit:junit:$junit4Version") { transitive = false }
    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage'
        exclude group: 'org.junit.jupiter'
        exclude group: 'ch.qos.logback'
    }
}